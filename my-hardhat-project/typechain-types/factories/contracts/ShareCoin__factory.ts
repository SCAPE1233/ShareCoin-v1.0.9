/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ShareCoin, ShareCoinInterface } from "../../contracts/ShareCoin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "miner",
        type: "address",
      },
    ],
    name: "BlockMined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "difficulty",
        type: "uint256",
      },
    ],
    name: "DifficultySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "LifetimeSubscriptionPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "miner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ShareCoin.PlanType",
        name: "plan",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "SubscriptionPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawnSubscriptionFunds",
    type: "event",
  },
  {
    inputs: [],
    name: "BLOCK_REWARD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "basicDailyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blockAlreadyUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blockHistory",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "miner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
    ],
    name: "claimMultipleRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmationThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockHistoryLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getSubscriptionInfo",
    outputs: [
      {
        internalType: "enum ShareCoin.PlanType",
        name: "plan",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lifetimeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lifetimePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lifetimeSold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawSubscriptionFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "premiumDailyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchaseLifetimeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ShareCoin.PlanType",
        name: "plan",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "daysCount",
        type: "uint256",
      },
    ],
    name: "purchaseSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "blockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "nonces",
        type: "uint256[]",
      },
    ],
    name: "serverSubmitMultipleMinedBlocksAndMintOnBehalf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newDifficulty",
        type: "uint256",
      },
    ],
    name: "setDifficulty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "standardDailyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "submitMinedBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "blockNumbers",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "nonces",
        type: "uint256[]",
      },
    ],
    name: "submitMultipleMinedBlocksAndMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "subscriptionActiveFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenLogoURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userPlan",
    outputs: [
      {
        internalType: "enum ShareCoin.PlanType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200043257601f601f196001600160401b03620023b63881900384810184168601838111878210176200036c578692829160405283396020958691810103126200043257516001600160a01b038082169182900362000432576200006562000437565b92600984526829b430b932a1b7b4b760b91b878501526200008562000437565b9060059586835264534841524560d81b8984015285518281116200036c5780600397620000b3895462000457565b8c8b8d808411620003f5575b505050508b908b83116001146200038e5760009262000382575b50508160011b9160001990891b1c19161786555b82519182116200036c57819060049362000108855462000457565b8b8b82116200032f575b50508a918a8411600114620002c75750600092620002bb575b50508160011b9160001990871b1c19161781555b3315620002a3577f616a733463376e72776c323734767133746673636661336f7263356f636b667a6002888888888888835460018060a01b031991338383161786553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600160065560006009556000600a556032600d556801158e460913d00000600f5568022b1c8c1227a00000601055680340aad21b3b7000006011556901b1ae4d6e2ef500000060125560075416176007556200020760085462000457565b918383116200027d575b5050505060c160085560086000526000207f68747470733a2f2f726f6f7374696e746865726f6f73742e6d7970696e61746181557f2e636c6f75642f697066732f6261666b7265696464776d7279787a633578643660018201550155604051611f089081620004ae8239f35b62000299936008600052856000209301901c8201910162000494565b8380808062000211565b602490600060405191631e4fbdf760e01b8352820152fd5b0151905038806200012b565b90921691846000528a6000209260005b8c82821062000318575050908460019594939210620002ff575b505050811b0181556200013f565b015160001983891b60f8161c19169055388080620002f1565b6001859682939686015181550195019301620002d7565b6200035a91876000528c82600020918d828901901c830193881062000362575b018c1c019062000494565b388b62000112565b925081926200034f565b634e487b7160e01b600052604160045260246000fd5b015190503880620000d9565b60008a81528d8120938616908e5b828210620003dc575050908460019594939210620003c3575b505050811b018655620000ed565b0151600019838b1b60f8161c19169055388080620003b5565b806001869782949787015181550196019401906200039c565b6200041e938d6000528360002092828801901c830193871062000428575b018d1c019062000494565b388c8b8d620000bf565b9250819262000413565b600080fd5b60408051919082016001600160401b038111838210176200036c57604052565b90600182811c9216801562000489575b60208310146200047357565b634e487b7160e01b600052602260045260246000fd5b91607f169162000467565b818110620004a0575050565b600081556001016200049456fe608060408181526004918236101561001657600080fd5b600092833560e01c91826304593adc14611872575081630515b9b01461185357816306fdde031461179457816307572eac14611775578163095ea7b3146116cb5781630c6d7b8e146116ac57816311479763146115b057816318160ddd1461159157816323266fbd1461154a57816323b872dd14611456578163243d4008146114375781633013ce291461140e578163313ce567146113f257816332cb6b0c146113cc57816350e0cdf414611388578163602512e11461133a5781636d18a84a1461131b57816370a08231146112e4578163715018a614611287578163729d0a8a1461116b5781637f05b9ef146111475781638820a08e146110525781638da5cb5b1461102957816395d89b4114610f26578163a5ee6c3e14610d38578163a9059cbb14610d07578163ae169a5014610c32578163af1966b714610a84578163d4365cd214610a65578163dcf600c114610a46578163dd62ed3e146109fd578163de250ace1461098f578163deb6b46214610948578163eaaa2d97146106e4578163ec74663d14610573578163ed47effd14610336578163f046395a146102fe578163f2fde38b1461026a57508063f804bb0e146101fe5763fceb17eb146101dd57600080fd5b346101fa57816003193601126101fa57602090600a549051908152f35b5080fd5b50346101fa5760203660031901126101fa579060609161021c6118d7565b6001600160a01b0316808352600c602090815282842054600b9091529282902054600091825260409091205460ff9093169242109061025d83518095611908565b6020840152151590820152f35b9050346102fa5760203660031901126102fa576102856118d7565b9061028e611a01565b6001600160a01b039182169283156102e4575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101fa5760203660031901126101fa5760209181906001600160a01b036103266118d7565b168152600b845220549051908152f35b919050346102fa576060908160031936011261056f576103546118d7565b9160249384359267ffffffffffffffff9384811161056b57610379903690840161192b565b95909460443590811161056757610396909695963690850161192b565b9190976103a1611a01565b6103a9611ba1565b6001600160a01b0382166000908152600b60205260409020546103cd904210611be9565b6103d8838814611d04565b6001600160a01b038216968a5b8b8282106103f557600160065580f35b86908c6104c68c888f61049a8761045e8a8f610415828f61048c98611d41565b359b8b898e9d52601460209d8e8281528484209184525261043c60ff848420541615611c2c565b8a82528d528181208e82528d5220805460ff1916600190811790915599611d41565b90518881018a815260609590951b6001600160601b0319166020860152903560348501529182906054850190565b03601f19810183528261198e565b519020928b51916104aa8361195c565b86835284868401528c8301528d42908301526080820152611c6e565b600254906802b5e3af16b188000091828101809111610553579284928e61054e97967f78b896357132952012fed86dedf1bfcfb388a941f2b7f4cb3f270ed3780155ca848f96600080516020611eb3833981519152978f61053e906105396a115eec47f6cf7e35000000899e1115611d51565b611d93565b51908152a38b51908152a3611bc4565b6103e5565b5050634e487b7160e01b8f5260118a52858ffd5b8880fd5b8780fd5b8380fd5b919050346102fa57826003193601126102fa5761058e611ba1565b600e54600d5411156106a857336000908152600b60205260409020546105b79042105b15611b0b565b60075460125482516323b872dd60e01b8152338582019081523060208083019190915260408201939093529092839182900360600190829088906001600160a01b03165af190811561069e5790610615918591610670575b50611b64565b338352600b60205260001981842055600c60205282209060ff19825416179055610640600e54611bc4565b600e55337f352f39a5ab385302b915299f87920512c62062733888ca47b658dceb140886ca8280a2600160065580f35b610691915060203d8111610697575b610689818361198e565b810190611b4c565b3861060f565b503d61067f565b82513d86823e3d90fd5b906020606492519162461bcd60e51b83528201526016602482015275131a59995d1a5b59481b1a5b5a5d081c995858da195960521b6044820152fd5b8383346101fa57806003193601126101fa5782359060058210156102fa57602493843561070f611ba1565b846001851480801561093b575b82811561092b575b50156108fa5782156108c957336000908152600b602052604090205461074b9042106105b1565b86916108b7576108ae575b600285146108a5575b6003851461089c575b818102908082048314901517156108635760075484516323b872dd60e01b8152338582019081523060208281019190915260408201949094529293929091849183916001600160a01b03169082908b90829060600103925af190811561089257906107d99188916108755750611b64565b6201518080820291820403610863574201918242116108515750907fcb1d9e2f1ade80c30cd5a94cc785e4e0fe02c9733ab244988d4a57bd30e712319291338652600b81528183872055600c815282862060ff1981541660ff871617905561084383518096611908565b8401523392a2600160065580f35b634e487b7160e01b8652601190528585fd5b634e487b7160e01b8652601183528686fd5b61088c9150843d861161069757610689818361198e565b8961060f565b85513d89823e3d90fd5b50601154610768565b5060105461075f565b50600f54610756565b634e487b7160e01b8752602184528787fd5b845162461bcd60e51b8152602081860152600c818a01526b64617973436f756e743d303f60a01b6044820152606490fd5b845162461bcd60e51b8152602081860152600c818a01526b24b73b30b634b210383630b760a11b6044820152606490fd5b90506108b7576003861482610724565b508691506002861461071c565b5050346101fa5760203660031901126101fa576020906109866109696118d7565b6001600160a01b03166000908152600b6020526040902054421090565b90519015158152f35b919050346102fa5760203660031901126102fa578135926013548410156109fa57506109bc60a0936119b0565b5080549260018201549260ff600180881b03600285015416926003850154940154169381519586526020860152840152606083015215156080820152f35b80fd5b5050346101fa57806003193601126101fa5780602092610a1b6118d7565b610a236118f2565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5050346101fa57816003193601126101fa57602090600f549051908152f35b5050346101fa57816003193601126101fa57602090600e549051908152f35b839150346101fa57602090816003193601126102fa57803590610aa5611a01565b60075485516370a0823160e01b815230838201526001600160a01b03909116908481602481855afa908115610c28579084918791610bf3575b5010610bb057838591604488518094819363a9059cbb60e01b835233888401528860248401525af1908115610ba6578591610b89575b5015610b4657507fd0d9606e9ba3933f02a3390fd4d387f26a9a812a6f35be64aa43ac916340cf28929351908152a180f35b845162461bcd60e51b8152908101839052601860248201527f5769746864726177207472616e73666572206661696c656400000000000000006044820152606490fd5b610ba09150843d861161069757610689818361198e565b86610b14565b86513d87823e3d90fd5b855162461bcd60e51b8152808301859052601d60248201527f4e6f7420656e6f75676820737562736372697074696f6e2066756e64730000006044820152606490fd5b809250868092503d8311610c21575b610c0c818361198e565b81010312610c1d5783905188610ade565b8580fd5b503d610c02565b87513d88823e3d90fd5b919050346102fa5760203660031901126102fa57610c658235610c53611ba1565b610c606013548210611dfc565b6119b0565b50610c7d60018060a01b036002830154163314611e38565b8281018054610c8f60ff821615611e74565b6002546802b5e3af16b188000095868201809211610cf4575090610cc26a115eec47f6cf7e350000006001931115611d51565b60ff1916179055610cd233611d93565b549051918252600080516020611eb383398151915260203393a3600160065580f35b634e487b7160e01b885260119052602487fd5b5050346101fa57806003193601126101fa57602090610d31610d276118d7565b6024359033611a2d565b5160018152f35b919050346102fa57806003193601126102fa5767ffffffffffffffff918035838111610f2257610d6b903690830161192b565b9390926024918235908111610f1e57610d87903690850161192b565b95610d90611ba1565b336000908152600b6020526040902054610dab904210611be9565b610db6878214611d04565b875b818110610dc85788600160065580f35b88610dd482848a611d41565b353382526014610df760ff88602095848752818120868252875220541615611c2c565b338c528252858b20818c528252858b20916001928360ff19825416179055610e7f610e23858d89611d41565b88518381018581523360601b6001600160601b031916602082015291356034830152610e52816054840161048c565b51902093885190610e628261195c565b8482528584830152338a8301524260608301526080820152611c6e565b600254926802b5e3af16b188000093848101809111610f0c5791600080516020611eb383398151915291610ec66a115eec47f6cf7e35000000610f07989796951115611d51565b610ecf33611d93565b8951908152837f78b896357132952012fed86dedf1bfcfb388a941f2b7f4cb3f270ed3780155ca833393a388519384523393a3611bc4565b610db8565b634e487b7160e01b8e5260118b52898efd5b8680fd5b8480fd5b8383346101fa57816003193601126101fa57805191809380549160019083821c9282851694851561101f575b602095868610811461100c57858952908115610fe85750600114610f90575b610f8c8787610f82828c038361198e565b519182918261188e565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610fd55750505082610f8c94610f8292820101948680610f71565b8054868501880152928601928101610fb7565b60ff19168887015250505050151560051b8301019250610f8282610f8c8680610f71565b634e487b7160e01b845260228352602484fd5b93607f1693610f52565b5050346101fa57816003193601126101fa5760055490516001600160a01b039091168152602090f35b919050346102fa57826003193601126102fa57805191836008549060019082821c92828116801561113d575b602095868610821461112a575084885290811561110857506001146110af575b610f8c8686610f82828b038361198e565b929550600883527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b8284106110f55750505082610f8c94610f8292820101943861109e565b80548685018801529286019281016110d8565b60ff191687860152505050151560051b8301019250610f8282610f8c3861109e565b634e487b7160e01b845260229052602483fd5b93607f169361107e565b5050346101fa57816003193601126101fa57602090516802b5e3af16b18800008152f35b919050346102fa576020908160031936011261056f57823567ffffffffffffffff8111610f225761119f903690850161192b565b6111aa939193611ba1565b855b8181106111bc5786600160065580f35b6111d86111ca828488611d41565b35610c606013548210611dfc565b506002818101549091906111f6906001600160a01b03163314611e38565b87810180549261120960ff851615611e74565b54926802b5e3af16b1880000938481018091116112745761126f95949392916112416a115eec47f6cf7e350000006001931115611d51565b60ff191617905561125133611d93565b548651918252600080516020611eb3833981519152863393a3611bc4565b6111ac565b634e487b7160e01b8c5260118b5260248cfd5b83346109fa57806003193601126109fa576112a0611a01565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101fa5760203660031901126101fa5760209181906001600160a01b0361130c6118d7565b16815280845220549051908152f35b5050346101fa57816003193601126101fa576020906013549051908152f35b9050346102fa5760203660031901126102fa577f0c246568fd822c64e52db247444169ef32469ac5f7095dc1069389feb1142dfd91602091359061137c611a01565b8160095551908152a180f35b5050346101fa5760203660031901126101fa576020916113ca9060ff9083906001600160a01b036113b76118d7565b168152600c865220541691518092611908565bf35b5050346101fa57816003193601126101fa57602090516a115eec47f6cf7e350000008152f35b5050346101fa57816003193601126101fa576020905160128152f35b5050346101fa57816003193601126101fa5760075490516001600160a01b039091168152602090f35b5050346101fa57816003193601126101fa57602090600d549051908152f35b905082346109fa5760603660031901126109fa576114726118d7565b61147a6118f2565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106114b6575b602088610d31898989611a2d565b86831061151e5781156115075733156114f057508252600160209081528683203384528152918690209085900390558290610d31876114a8565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101fa57806003193601126101fa5760209160ff9082906001600160a01b036115746118d7565b168152601485528181206024358252855220541690519015158152f35b5050346101fa57816003193601126101fa576020906002549051908152f35b9050346102fa57816003193601126102fa57336000908152600b60205260409020549035906115e0904210611be9565b3383527f78b896357132952012fed86dedf1bfcfb388a941f2b7f4cb3f270ed3780155ca602060148152838520838652815261162260ff858720541615611c2c565b33808652601482528486208487528252848620805460ff19166001179055845180830185815260609290921b6001600160601b03191660208301526024356034830152611672816054840161048c565b519020936116a281516116848161195c565b85815286848201523383820152426060820152876080820152611c6e565b519384523393a380f35b5050346101fa57816003193601126101fa576020906012549051908152f35b9050346102fa57816003193601126102fa576116e56118d7565b60243590331561175e576001600160a01b031691821561174757508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b5050346101fa57816003193601126101fa576020906010549051908152f35b919050346102fa57826003193601126102fa57805191836003549060019082821c928281168015611849575b602095868610821461112a575084885290811561110857506001146117f057610f8c8686610f82828b038361198e565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106118365750505082610f8c94610f8292820101943861109e565b8054868501880152928601928101611819565b93607f16936117c0565b5050346101fa57816003193601126101fa576020906011549051908152f35b8490346101fa57816003193601126101fa576020906009548152f35b6020808252825181830181905290939260005b8281106118c357505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016118a1565b600435906001600160a01b03821682036118ed57565b600080fd5b602435906001600160a01b03821682036118ed57565b9060058210156119155752565b634e487b7160e01b600052602160045260246000fd5b9181601f840112156118ed5782359167ffffffffffffffff83116118ed576020808501948460051b0101116118ed57565b60a0810190811067ffffffffffffffff82111761197857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761197857604052565b6013548110156119eb576005906013600052027f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900190600090565b634e487b7160e01b600052603260045260246000fd5b6005546001600160a01b03163303611a1557565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b03808416928315611af25716928315611ad95760009083825281602052604082205490838210611aa7575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b15611b1257565b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481cdd589cd8dc9a58995960721b6044820152606490fd5b908160209103126118ed575180151581036118ed5790565b15611b6b57565b60405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b6044820152606490fd5b600260065414611bb2576002600655565b604051633ee5aeb560e01b8152600490fd5b6000198114611bd35760010190565b634e487b7160e01b600052601160045260246000fd5b15611bf057565b60405162461bcd60e51b815260206004820152601460248201527314dd589cd8dc9a5c1d1a5bdb88195e1c1a5c995960621b6044820152606490fd5b15611c3357565b60405162461bcd60e51b8152602060048201526013602482015272426c6f636b20616c726561647920757365642160681b6044820152606490fd5b6013546801000000000000000081101561197857806001611c9292016013556119b0565b611cee57600460809183518155602084015160018201556002810160018060a01b036040860151166bffffffffffffffffffffffff60a01b8254161790556060840151600382015501910151151560ff80198354169116179055565b634e487b7160e01b600052600060045260246000fd5b15611d0b57565b60405162461bcd60e51b815260206004820152600e60248201526d082e4e4c2f240dad2e6dac2e8c6d60931b6044820152606490fd5b91908110156119eb5760051b0190565b15611d5857565b60405162461bcd60e51b815260206004820152601360248201527213585e081cdd5c1c1b1e48195e18d959591959606a1b6044820152606490fd5b6001600160a01b03168015611ad9576002546802b5e3af16b1880000808201809211611bd35760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160009360025584845283825260408420818154019055604051908152a3565b15611e0357565b60405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606490fd5b15611e3f57565b60405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329036b4b732b960991b6044820152606490fd5b15611e7b57565b60405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606490fdfe24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb7a26469706673582212204105d23fd337014f00d7700b5ab2eda321f379a0bc0b9d447cb97b8a08d9284a64736f6c63430008140033";

type ShareCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShareCoin__factory extends ContractFactory {
  constructor(...args: ShareCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _paymentToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_paymentToken, overrides || {});
  }
  override deploy(
    _paymentToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_paymentToken, overrides || {}) as Promise<
      ShareCoin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ShareCoin__factory {
    return super.connect(runner) as ShareCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareCoinInterface {
    return new Interface(_abi) as ShareCoinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ShareCoin {
    return new Contract(address, _abi, runner) as unknown as ShareCoin;
  }
}
